<div class="weather-widget" data-city="{{ city }}">
    <div class="weather-loading">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
    <div class="weather-content" style="display: none;">
        <div class="current-weather">
            <div class="weather-header">
                <h4>Météo à {{ city }}</h4>
                <div class="weather-error text-danger" style="display: none;"></div>
            </div>
            <div class="weather-body">
                <div class="weather-main">
                    <div class="weather-icon">
                        <img src="" alt="Weather icon" class="weather-icon-img">
                    </div>
                    <div class="weather-info">
                        <div class="temperature"></div>
                        <div class="feels-like"></div>
                        <div class="description"></div>
                    </div>
                </div>
                <div class="weather-details">
                    <div class="detail-item">
                        <i class="fas fa-tint"></i>
                        <span class="humidity"></span>
                    </div>
                    <div class="detail-item">
                        <i class="fas fa-wind"></i>
                        <span class="wind"></span>
                    </div>
                    <div class="detail-item">
                        <i class="fas fa-cloud"></i>
                        <span class="clouds"></span>
                    </div>
                    <div class="detail-item">
                        <i class="fas fa-compress-alt"></i>
                        <span class="pressure"></span>
                    </div>
                </div>
                <div class="sun-times">
                    <div class="sunrise">
                        <i class="fas fa-sun"></i>
                        <span class="sunrise-time"></span>
                    </div>
                    <div class="sunset">
                        <i class="fas fa-moon"></i>
                        <span class="sunset-time"></span>
                    </div>
                </div>
            </div>
        </div>
        <div class="forecast-section">
            <h5>Prévisions sur 5 jours</h5>
            <div class="forecast-container"></div>
        </div>
    </div>
</div>

<style>
.weather-widget {
    background: white;
    border-radius: 15px;
    box-shadow: 0 0 20px rgba(0,0,0,0.1);
    padding: 25px;
    margin-bottom: 30px;
}

.weather-header {
    margin-bottom: 20px;
}

.weather-header h4 {
    color: #333;
    margin-bottom: 15px;
    font-size: 1.5rem;
}

.weather-main {
    display: flex;
    align-items: center;
    margin-bottom: 20px;
}

.weather-icon {
    margin-right: 20px;
}

.weather-icon-img {
    width: 100px;
    height: 100px;
}

.weather-info {
    flex: 1;
}

.temperature {
    font-size: 2.5rem;
    font-weight: bold;
    color: #333;
    margin-bottom: 5px;
}

.feels-like {
    color: #666;
    margin-bottom: 5px;
}

.description {
    color: #666;
    text-transform: capitalize;
}

.weather-details {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 15px;
    margin-bottom: 20px;
}

.detail-item {
    display: flex;
    align-items: center;
    color: #666;
}

.detail-item i {
    margin-right: 10px;
    color: #ff681a;
    width: 20px;
}

.sun-times {
    display: flex;
    justify-content: space-between;
    padding: 15px;
    background: #f8f9fa;
    border-radius: 8px;
}

.sunrise, .sunset {
    display: flex;
    align-items: center;
    color: #666;
}

.sunrise i, .sunset i {
    margin-right: 10px;
    color: #ff681a;
}

.forecast-section {
    margin-top: 30px;
    padding-top: 20px;
    border-top: 1px solid #eee;
}

.forecast-section h5 {
    color: #333;
    margin-bottom: 15px;
}

.forecast-container {
    display: flex;
    justify-content: space-between;
    overflow-x: auto;
    padding: 10px 0;
}

.forecast-day {
    text-align: center;
    padding: 10px;
    min-width: 100px;
}

.day-name {
    font-weight: bold;
    color: #333;
    margin-bottom: 5px;
}

.forecast-temp {
    font-size: 1.2rem;
    color: #333;
    margin: 5px 0;
}

.forecast-desc {
    font-size: 0.9rem;
    color: #666;
    text-transform: capitalize;
}

.weather-loading {
    text-align: center;
    padding: 20px;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const weatherWidgets = document.querySelectorAll('.weather-widget');
    
    weatherWidgets.forEach(widget => {
        const city = widget.dataset.city;
        const content = widget.querySelector('.weather-content');
        const loading = widget.querySelector('.weather-loading');
        const error = widget.querySelector('.weather-error');
        
        fetch(`/api/weather/${encodeURIComponent(city)}`)
            .then(response => response.json())
            .then(data => {
                if (data.weather.error) {
                    error.textContent = data.weather.error;
                    error.style.display = 'block';
                    loading.style.display = 'none';
                    return;
                }

                // Update current weather
                const weather = data.weather;
                widget.querySelector('.weather-icon-img').src = `http://openweathermap.org/img/wn/${weather.icon}@4x.png`;
                widget.querySelector('.temperature').textContent = `${weather.temperature}°C`;
                widget.querySelector('.feels-like').textContent = `Ressenti: ${weather.feels_like}°C`;
                widget.querySelector('.description').textContent = weather.description;
                widget.querySelector('.humidity').textContent = `Humidité: ${weather.humidity}%`;
                widget.querySelector('.wind').textContent = `Vent: ${weather.wind_speed} m/s`;
                widget.querySelector('.clouds').textContent = `Nuages: ${weather.clouds}%`;
                widget.querySelector('.pressure').textContent = `Pression: ${weather.pressure} hPa`;
                widget.querySelector('.sunrise-time').textContent = `Lever: ${weather.sunrise}`;
                widget.querySelector('.sunset-time').textContent = `Coucher: ${weather.sunset}`;

                // Update forecast
                const forecastContainer = widget.querySelector('.forecast-container');
                forecastContainer.innerHTML = '';
                
                data.forecast.forEach(day => {
                    const dayElement = document.createElement('div');
                    dayElement.className = 'forecast-day';
                    dayElement.innerHTML = `
                        <div class="day-name">${day.day}</div>
                        <img src="http://openweathermap.org/img/wn/${day.icon}.png" alt="Weather icon">
                        <div class="forecast-temp">${day.temperature}°C</div>
                        <div class="forecast-desc">${day.description}</div>
                    `;
                    forecastContainer.appendChild(dayElement);
                });

                loading.style.display = 'none';
                content.style.display = 'block';
            })
            .catch(err => {
                error.textContent = 'Erreur lors de la récupération des données météo';
                error.style.display = 'block';
                loading.style.display = 'none';
            });
    });
});
</script> 